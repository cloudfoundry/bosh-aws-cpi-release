---
shared:
- &prepare-director
  task: prepare-director
  file: pipelines/shared/tasks/prepare-director.yml
  image: aws-cpi-image
  params: &prepare-director-params
    INFRASTRUCTURE:     aws
    DIRECTOR_VARS_FILE: |
      access_key_id: ((aws-cpi-integration-tests_aws_access_key.username))
      secret_access_key: ((aws-cpi-integration-tests_aws_access_key.password))
      region: us-west-1

- &deploy-director
  task: deploy-director
  file: pipelines/shared/tasks/deploy-director.yml
  image: aws-cpi-image

- &run-bats
  task: run-bats
  file: pipelines/shared/tasks/run-bats.yml
  image: aws-cpi-image
  params:
    INFRASTRUCTURE:     aws
    STEMCELL_NAME:      bosh-aws-xen-hvm-ubuntu-jammy-go_agent
    BAT_INFRASTRUCTURE: aws
    BAT_NETWORKING:     manual
    BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~root_partition"

- &run-end-2-end
  task: run-e2e
  file: bosh-cpi-src/ci/tasks/run-e2e.yml
  image: aws-cpi-image
  params:
    BOSH_AWS_KMS_KEY_ARN: ((arn_keys.aws_kms_key_arn))

- &ensure-terminated
  task: ensure-terminated
  file: bosh-cpi-src/ci/tasks/ensure-terminated.yml
  image: aws-cpi-image
  params:
    AWS_ACCESS_KEY_ID:     ((bosh_cpis_aws_access_key.username))
    AWS_SECRET_ACCESS_KEY: ((bosh_cpis_aws_access_key.password))
    AWS_DEFAULT_REGION:    us-west-1

- &teardown
  task: teardown
  file: pipelines/shared/tasks/teardown.yml
  image: aws-cpi-image

jobs:
- name: build-candidate
  serial: true
  plan:
  - in_parallel:
    - {trigger: true, get: bosh-cpi-src, resource: bosh-cpi-src-in}
    - {trigger: false, get: version-semver, params: {bump: patch}}
    - {trigger: false, get: bosh-cli}
    - {get: aws-cpi-image }
  - put: version-semver
    params: {file: version-semver/number}
  - task: build
    file: bosh-cpi-src/ci/tasks/build-candidate.yml
    image: aws-cpi-image
  - put: bosh-cpi-dev-artifacts
    params: {file: candidate/*.tgz}

- name: integration
  serial: true
  plan:
  - in_parallel:
    - {trigger: true,  passed: [build-candidate], get: bosh-cpi-release, resource: bosh-cpi-dev-artifacts}
    - {trigger: false, passed: [build-candidate], get: bosh-cpi-src, resource: bosh-cpi-src-in}
    - {get: stemcell,        trigger: true, resource: light-stemcell}
    - {get: aws-cpi-image }

  - put: environment
    params:
      env_name: bosh-aws-cpi-integration
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
  - task: test
    file: bosh-cpi-src/ci/tasks/run-integration.yml
    image: aws-cpi-image
    params:
      AWS_ACCESS_KEY_ID:                       ((aws-cpi-integration-tests_aws_access_key.username))
      AWS_SECRET_ACCESS_KEY:                   ((aws-cpi-integration-tests_aws_access_key.password))
      AWS_ROLE_ARN:                            arn:aws:iam::768764561134:role/aws-cpi-concourse
      BOSH_AWS_PERMISSIONS_AUDITOR_KEY_ID:     ((iam-permission-auditor_aws_access_key.username))
      BOSH_AWS_PERMISSIONS_AUDITOR_SECRET_KEY: ((iam-permission-auditor_aws_access_key.password))
      AWS_DEFAULT_REGION:                      us-west-1
      BOSH_AWS_KMS_KEY_ARN:                    ((arn_keys.aws_kms_key_arn))
      BOSH_AWS_KMS_KEY_ARN_OVERRIDE:           ((arn_keys.aws_kms_key_arn_override))
      BOSH_AWS_WINDOWS_IMAGE_ID:               ami-01073c012a14da808 # This is the us-west-1 AMI inside the Windows 2019.53 stemcell
    ensure:
      do:
        - <<: *ensure-terminated
        - put: environment
          params:
            env_name: bosh-aws-cpi-integration
            action: destroy
            env_name_file: environment/name
            terraform_source: bosh-cpi-src/ci/assets/terraform
          get_params:
            action: destroy

- name: bats
  serial: true
  plan:
  - in_parallel:
    - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
    - {get: bosh-release,    trigger: false}
    - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in, passed: [build-candidate]}
    - {get: stemcell,        trigger: true, resource: light-stemcell}
    - {get: bosh-deployment, trigger: false}
    - {get: pipelines,       trigger: false}
    - {get: bosh-cli,        trigger: false}
    - {get: bats,            trigger: false}
    - {get: aws-cpi-image }
  - put: environment
    params:
      env_name: bosh-aws-cpi-bats
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE:  |
          -o pipelines/shared/assets/ops/remove-hm.yml
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
    - do:
        - <<: *deploy-director
        - <<: *run-bats
      ensure:
        do:
          - <<: *teardown
          - <<: *ensure-terminated
    ensure:
      do:
        - put: environment
          params:
            env_name: bosh-aws-cpi-bats
            action: destroy
            env_name_file: environment/name
            terraform_source: bosh-cpi-src/ci/assets/terraform
          get_params:
            action: destroy

- name: end-2-end
  serial: true
  plan:
  - in_parallel:
    - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
    - {get: bosh-release,    trigger: false}
    - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in, passed: [build-candidate]}
    - {get: stemcell,        trigger: false, resource: light-stemcell}
    - {get: heavy-stemcell,  trigger: false}
    - {get: bosh-deployment, trigger: false}
    - {get: pipelines,       trigger: false}
    - {get: bosh-cli,        trigger: false}
    - {get: aws-cpi-image }
  - put: environment
    params:
      env_name: bosh-aws-cpi-end-2-end
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
      override_files: [bosh-cpi-src/ci/assets/terraform/e2e/e2e.tf]
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE:  |
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
          -o pipelines/aws/assets/ops/iam-instance-profile-ops-file.yml
    - do:
        - <<: *deploy-director
        - <<: *run-end-2-end
      ensure:
        do:
          - <<: *teardown
          - <<: *ensure-terminated
    ensure:
      do:
        - put: environment
          params:
            env_name: bosh-aws-cpi-end-2-end
            action: destroy
            env_name_file: environment/name
            terraform_source: bosh-cpi-src/ci/assets/terraform
          get_params:
            action: destroy

- name: promote-candidate
  plan:
  - in_parallel:
    - {get: bosh-cpi-release,  trigger: false, resource: bosh-cpi-dev-artifacts, passed: [end-2-end, bats, integration]}
    - {get: bosh-cpi-src, trigger: false, resource: bosh-cpi-src-in, passed: [end-2-end, bats, integration]}
    - {trigger: false, get: release-version-semver, params: {bump: major}}
    - {trigger: false, get: bosh-cli}
    - {get: aws-cpi-image }
  - task: promote
    file: bosh-cpi-src/ci/tasks/promote-candidate.yml
    image: aws-cpi-image
    params:
      AWS_ACCESS_KEY_ID:     ((bosh_cpis_aws_access_key.username))
      AWS_SECRET_ACCESS_KEY: ((bosh_cpis_aws_access_key.password))
  - put: bosh-cpi-src-out
    params: {repository: promoted/repo, rebase: true, tag_prefix: "v", tag: promoted/integer_version}
  - put: release-version-semver
    params: {file: release-version-semver/number}

- name: build-dockerfile
  public: true
  serial: true
  plan:
    - get: bosh-cpi-src-dockerfiles
      trigger: true
    - put: aws-cpi-image
      params:
        build: "bosh-cpi-src-dockerfiles/ci/docker/aws-cpi"
      get_params:
        skip_download: true


resource_types:
- name: terraform_type
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: bosh-cpi-dev-artifacts
  type: s3
  source:
    regexp: bosh-aws-cpi-(\d+\.\d+\.\d+)\.tgz
    bucket: bosh-aws-cpi-pipeline
    region_name: us-east-1
    access_key_id: ((bosh_cpis_aws_access_key.username))
    secret_access_key: ((bosh_cpis_aws_access_key.password))
- name: bosh-cpi-src-in
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bosh-aws-cpi-release.git
    branch: assume-role-support
    private_key: ((github_deploy_key_bosh-aws-cpi-release.private_key))
    ignore_paths:
      - .final_builds/**/*.yml
      - releases/**/*.yml
- name: bosh-cpi-src-out
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bosh-aws-cpi-release.git
    branch: assume-role-support
    private_key: ((github_deploy_key_bosh-aws-cpi-release.private_key))
- name: bosh-cpi-src-dockerfiles
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bosh-aws-cpi-release.git
    branch: assume-role-support
    paths:
      - "ci/docker"
- name: version-semver
  type: semver
  source:
    key:               current-version # dev-release version
    bucket:            bosh-aws-cpi-pipeline
    access_key_id:     ((bosh_cpis_aws_access_key.username))
    secret_access_key: ((bosh_cpis_aws_access_key.password))
- name: release-version-semver
  type: semver
  source:
    key:               release-current-version
    bucket:            bosh-aws-cpi-pipeline
    access_key_id:     ((bosh_cpis_aws_access_key.username))
    secret_access_key: ((bosh_cpis_aws_access_key.password))
- name: environment
  type: terraform_type
  source:
    backend_type: s3
    backend_config:
      access_key:  ((bosh_cpis_aws_access_key.username))
      secret_key:  ((bosh_cpis_aws_access_key.password))
      region: us-east-1
      bucket:      bosh-aws-cpi-terraform
      key:         terraform.tfstate
    migrate_from_storage:
      access_key_id:     ((bosh_cpis_aws_access_key.username))
      secret_access_key: ((bosh_cpis_aws_access_key.password))
      bucket:            bosh-aws-cpi-terraform
      bucket_path:       terraform-state
    vars:
      access_key: ((bosh_cpis_aws_access_key.username))
      secret_key: ((bosh_cpis_aws_access_key.password))
      region:     us-west-1
      public_key: ((integration_vm_keypair.public_key))
      role_arn:   arn:aws:iam::768764561134:role/aws-cpi-integration-tests
- name: bosh-cli
  type: s3
  source:
    regexp: bosh-cli-([0-9.]+)-linux-amd64
    bucket: bosh-cli-artifacts
    region_name: us-east-1
- name: pipelines
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
    branch: master
- name: heavy-stemcell
  type: bosh-io-stemcell
  source:
    name: &heavy-stemcell bosh-aws-xen-hvm-ubuntu-jammy-go_agent
    force_regular: true
- name: bats
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
    branch: master
- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment
    branch: master
- name: bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
- name: light-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
- name: aws-cpi-image
  type: docker-image
  source:
    repository: bosh/aws-cpi
    username: ((docker.username))
    password: ((docker.password))
