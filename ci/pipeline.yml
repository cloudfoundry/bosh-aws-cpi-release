---
shared:
- &prepare-director
  task: prepare-director
  file: pipelines/shared/tasks/prepare-director.yml
  image: bosh-integration-image
  params: &prepare-director-params
    INFRASTRUCTURE: aws
    DIRECTOR_VARS_FILE: |
      access_key_id: ((aws-admin.username))
      secret_access_key: ((aws-admin.password))
      region: us-west-1

- &deploy-director
  task: deploy-director
  file: pipelines/shared/tasks/deploy-director.yml
  image: bosh-integration-image

- &run-bats
  task: run-bats
  file: pipelines/shared/tasks/run-bats.yml
  image: bosh-integration-image
  params:
    INFRASTRUCTURE: aws
    STEMCELL_NAME: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
    BAT_INFRASTRUCTURE: aws
    BAT_RSPEC_FLAGS: "--tag ~multiple_manual_networks --tag ~root_partition"

- &run-end-2-end
  task: run-e2e
  file: bosh-aws-cpi-release/ci/tasks/run-e2e.yml
  image: bosh-integration-image
  params:
    BOSH_AWS_KMS_KEY_ARN: ((arn_keys.aws_kms_key_arn))

- &ensure-terminated
  task: ensure-terminated
  file: bosh-aws-cpi-release/ci/tasks/ensure-terminated.yml
  image: bosh-integration-image
  params:
    AWS_ACCESS_KEY_ID: ((aws-admin.username))
    AWS_SECRET_ACCESS_KEY: ((aws-admin.password))
    AWS_DEFAULT_REGION: us-west-1

- &teardown
  task: teardown
  file: pipelines/shared/tasks/teardown.yml
  image: bosh-integration-image

jobs:
- name: build-candidate
  serial: true
  plan:
  - in_parallel:
    - get: bosh-aws-cpi-release
      trigger: true
    - get: bosh-integration-image
    - get: bosh-shared-ci
    - get: bosh-cli-image
  - task: run-unit-specs
    file: bosh-aws-cpi-release/ci/tasks/run-unit-specs.yml
    image: bosh-integration-image
  - task: build
    file: bosh-shared-ci/tasks/release/create-dev-release.yml
    image: bosh-cli-image
    input_mapping:
      release_repo: bosh-aws-cpi-release
  - put: bosh-cpi-dev-artifacts
    params:
      file: release_tarball/release.tgz

- name: integration
  serial: true
  plan:
  - in_parallel:
    - get: bosh-cpi-release
      resource: bosh-cpi-dev-artifacts
      passed: [ build-candidate ]
      trigger: true
    - get: bosh-aws-cpi-release
      passed: [ build-candidate ]
    - get: stemcell
      resource: light-stemcell
      trigger: true
    - get: bosh-integration-image
  - put: environment
    params:
      env_name: bosh-aws-cpi-integration
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-aws-cpi-release/ci/assets/terraform
  - task: test
    file: bosh-aws-cpi-release/ci/tasks/run-integration.yml
    image: bosh-integration-image
    params:
      AWS_ACCESS_KEY_ID: ((aws-test-user.username))
      AWS_SECRET_ACCESS_KEY: ((aws-test-user.password))
      BOSH_AWS_PERMISSIONS_AUDITOR_KEY_ID: ((aws-permission-auditor.username))
      BOSH_AWS_PERMISSIONS_AUDITOR_SECRET_KEY: ((aws-permission-auditor.password))
      AWS_DEFAULT_REGION: us-west-1
      BOSH_AWS_KMS_KEY_ARN: ((arn_keys.aws_kms_key_arn))
      BOSH_AWS_KMS_KEY_ARN_OVERRIDE: ((arn_keys.aws_kms_key_arn_override))
      BOSH_AWS_WINDOWS_IMAGE_ID: ami-01073c012a14da808 # This is the us-west-1 AMI inside the Windows 2019.53 stemcell
    ensure:
      do:
      - <<: *ensure-terminated
      - put: environment
        params:
          env_name: bosh-aws-cpi-integration
          action: destroy
          env_name_file: environment/name
          terraform_source: bosh-aws-cpi-release/ci/assets/terraform
        get_params:
          action: destroy

- name: bats
  serial: true
  plan:
  - in_parallel:
    - get: cpi-release
      resource: bosh-cpi-dev-artifacts
      passed: [ build-candidate ]
      trigger: true
    - get: bosh-release
    - get: bosh-aws-cpi-release
      passed: [ build-candidate ]
    - get: stemcell
      resource: light-stemcell
      trigger: true
    - get: bosh-deployment
    - get: pipelines
    - get: bats
    - get: bosh-integration-image
  - put: environment
    params:
      env_name: bosh-aws-cpi-bats
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-aws-cpi-release/ci/assets/terraform
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE: |
          -o pipelines/shared/assets/ops/remove-hm.yml
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
    - do:
      - <<: *deploy-director
      - <<: *run-bats
      ensure:
        do:
        - <<: *teardown
        - <<: *ensure-terminated
    ensure:
      do:
      - put: environment
        params:
          env_name: bosh-aws-cpi-bats
          action: destroy
          env_name_file: environment/name
          terraform_source: bosh-aws-cpi-release/ci/assets/terraform
        get_params:
          action: destroy

- name: end-2-end
  serial: true
  plan:
  - in_parallel:
    - get: cpi-release
      resource: bosh-cpi-dev-artifacts
      passed: [ build-candidate ]
      trigger: true
    - get: bosh-release
    - get: bosh-aws-cpi-release
      passed: [ build-candidate ]
    - get: stemcell
      resource: light-stemcell
    - get: heavy-stemcell
    - get: bosh-deployment
    - get: pipelines
    - get: bosh-integration-image
  - put: environment
    params:
      env_name: bosh-aws-cpi-end-2-end
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-aws-cpi-release/ci/assets/terraform
      override_files: [ bosh-aws-cpi-release/ci/assets/terraform/e2e/e2e.tf ]
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE: |
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
          -o pipelines/aws/assets/ops/iam-instance-profile-ops-file.yml
    - do:
      - <<: *deploy-director
      - <<: *run-end-2-end
      ensure:
        do:
        - <<: *teardown
        - <<: *ensure-terminated
    ensure:
      do:
      - put: environment
        params:
          env_name: bosh-aws-cpi-end-2-end
          action: destroy
          env_name_file: environment/name
          terraform_source: bosh-aws-cpi-release/ci/assets/terraform
        get_params:
          action: destroy

- name: automatically-release-new-patch
  serial_groups: [ version ]
  plan:
  - in_parallel:
    - get: bosh-cpi-release
      resource: bosh-cpi-dev-artifacts
      passed: [ end-2-end, bats, integration ]
      trigger: true
    - get: bosh-aws-cpi-release
      passed: [ end-2-end, bats, integration ]
    - get: bosh-shared-ci
    - get: current-version
      resource: release-version-semver
    - get: patched-version
      resource: release-version-semver
      params:
        bump: patch
    - get: bosh-security-scanner-registry-image
  - try:
      task: check-for-patched-cves
      file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        input_repo: bosh-aws-cpi-release
        version: current-version
      params:
        SEVERITY: CRITICAL,HIGH
        GIT_PRIVATE_KEY: ((github_deploy_key_bosh-aws-cpi-release.private_key))
      on_success:
        do:
        - put: bosh-cpi-release-notes
          params:
            file: release-notes/release-notes.md
        - put: release-version-semver
          params:
            file: patched-version/version
  - task: ensure-cve-checker-succeeded
    file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
    image: bosh-security-scanner-registry-image
    input_mapping:
      task-output-folder: patched_cves
  - try:
      task: check-for-updated-vendored-packages
      file: bosh-shared-ci/tasks/release/check-for-updated-vendored-packages.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        input_repo: bosh-aws-cpi-release
        version: current-version
      params:
        PACKAGES: [aws-cpi-ruby-3.3]
      on_success:
        do:
          - put: bosh-cpi-release-notes
            params:
              file: release-notes/release-notes.md
          - put: release-version-semver
            params:
              file: patched-version/version
  - task: ensure-update-package-check-succeeded
    file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
    image: bosh-security-scanner-registry-image
    input_mapping:
      task-output-folder: package-updates

- name: bump-major
  serial_groups: [ version ]
  plan:
  - put: release-version-semver
    params:
      bump: major

- name: bump-minor
  serial_groups: [ version ]
  plan:
  - put: release-version-semver
    params:
      bump: minor

- name: bump-patch
  serial_groups: [ version ]
  plan:
  - put: release-version-semver
    params:
      bump: patch

- name: promote-candidate
  serial_groups: [ version ]
  disable_manual_trigger: true
  plan:
  - in_parallel:
    - get: bosh-aws-cpi-release
      passed: [ end-2-end, bats, integration ]
    - get: release-version-semver
      trigger: true
    - get: bosh-integration-image
    - get: bosh-cpi-release-notes
    - get: bosh-shared-ci
  - task: promote
    file: bosh-shared-ci/tasks/release/create-final-release.yml
    image: bosh-integration-image
    input_mapping:
      release_repo: bosh-aws-cpi-release
      version: release-version-semver
    params:
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: bots@cloudfoundry.org
      PRIVATE_YML: |
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((gcp_json_key))'
  - put: bosh-aws-cpi-release
    params:
      repository: release_repo
      rebase: true
      tag: release_metadata/tag-name
  - put: bosh-aws-cpi-release-github-release
    params:
      name: release_metadata/tag-name
      tag: release_metadata/tag-name
      body: bosh-cpi-release-notes/release-notes
      commitish: bosh-aws-cpi-release/.git/ref
      generate_release_notes: true
  - put: bosh-cpi-release-notes
    params:
      file: release_metadata/empty-file

- name: cleanup-leftover-environments
  plan:
    - in_parallel:
        - get: bosh-integration-image
        - get: bosh-aws-cpi-release
        - get: daily
          trigger: true
    - task: cleanup-leftover-environments
      file: bosh-aws-cpi-release/ci/tasks/cleanup-leftover-environments.yml
      image: bosh-integration-image
      params:
        BBL_AWS_ACCESS_KEY_ID: ((aws-admin.username))
        BBL_AWS_SECRET_ACCESS_KEY: ((aws-admin.password))
        BBL_AWS_REGION: us-west-1

- name: bump-deps
  plan:
  - in_parallel:
    - get: bosh-aws-cpi-release
    - get: ruby-release
    - get: bosh-ruby-release-registry-image
    - get: weekly
      trigger: true
    - get: bosh-integration-image
  - task: bump-gems
    image: bosh-ruby-release-registry-image
    file: ruby-release/ci/tasks/shared/bump-gems.yml
    input_mapping:
      input-repo: bosh-aws-cpi-release
    output_mapping:
      output-repo: bosh-aws-cpi-release
    params:
      GEM_DIRS: src/bosh_aws_cpi
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: bots@cloudfoundry.org
      PACKAGE: ruby-3.2
      VENDOR: true
  - task: run-unit-specs
    file: bosh-aws-cpi-release/ci/tasks/run-unit-specs.yml
    image: bosh-integration-image
  - put: bosh-aws-cpi-release
    params:
      repository: bosh-aws-cpi-release
      rebase: true

- name: bump-bosh-packages
  plan:
  - in_parallel:
    - get: bosh-aws-cpi-release
      resource: bosh-aws-cpi-release
    - get: ruby-release
      trigger: true
    - get: bosh-integration-image
  - task: bump-ruby-package
    image: bosh-integration-image
    file: ruby-release/ci/tasks/shared/bump-ruby-package.yml
    input_mapping:
      bosh-release: bosh-aws-cpi-release
    output_mapping:
      bosh-release: bosh-aws-cpi-release
    params:
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
      PACKAGE: ruby-3.3
      PACKAGE_PREFIX: aws-cpi
      PRIVATE_YML: |
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((gcp_json_key))'
      RUBY_VERSION_PATH: src/bosh_aws_cpi/.ruby-version
  - task: run-unit-specs
    file: bosh-aws-cpi-release/ci/tasks/run-unit-specs.yml
    image: bosh-integration-image
  - put: bosh-aws-cpi-release
    params:
      repository: bosh-aws-cpi-release
      rebase: true


resource_types:
- name: terraform_type
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    username: ((dockerhub_username))
    password: ((dockerhub_password))
- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource
    username: ((dockerhub_username))
    password: ((dockerhub_password))

resources:
- name: bosh-cpi-dev-artifacts
  type: gcs
  source:
    versioned_file: bosh-aws-cpi-dev-release.tgz
    bucket: bosh-aws-cpi-pipeline
    json_key: ((gcp_json_key))
- name: bosh-cpi-release-notes
  type: gcs
  source:
    versioned_file: release-notes
    bucket: bosh-aws-cpi-pipeline
    json_key: ((gcp_json_key))
- name: bosh-aws-cpi-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-aws-cpi-release.git
    branch: master
    private_key: ((github_deploy_key_bosh-aws-cpi-release.private_key))
- name: bosh-shared-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-shared-ci.git
    private_key: ((github_deploy_key_bosh-shared-ci.private_key))
- name: bosh-aws-cpi-release-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-aws-cpi-release
    access_token: ((github_public_repo_token))
- name: release-version-semver
  type: semver
  source:
    key: release-current-version
    bucket: bosh-aws-cpi-pipeline
    driver: gcs
    json_key: ((gcp_json_key))
- name: environment
  type: terraform_type
  source:
    backend_type: gcs
    backend_config:
      bucket: bosh-aws-cpi-pipeline
      prefix: terraform
      credentials: ((gcp_json_key))
    vars:
      access_key: ((aws-admin.username))
      secret_key: ((aws-admin.password))
      region: us-west-1
      public_key: ((integration_vm_keypair.public_key))
      resource_prefix: awscpi
- name: pipelines
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-cpi-certification
    branch: master
- name: heavy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
    force_regular: true
- name: bats
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
    branch: master
- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment
    branch: master
- name: bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
- name: light-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
- name: bosh-cli-image
  type: registry-image
  source:
    repository: bosh/cli
    username: ((dockerhub_username))
    password: ((dockerhub_password))
- name: bosh-integration-image
  type: registry-image
  source:
    repository: ghcr.io/cloudfoundry/bosh/integration
    tag: main
    username: ((github_read_write_packages.username))
    password: ((github_read_write_packages.password))
- name: bosh-ruby-release-registry-image
  type: registry-image
  source:
    repository: bosh/ruby-release
    username: ((dockerhub_username))
    password: ((dockerhub_password))
- name: ruby-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-ruby-release.git
- name: bosh-security-scanner-registry-image
  type: registry-image
  source:
    repository: bosh/security-scanner
    username: ((dockerhub_username))
    password: ((dockerhub_password))
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 4:30 -0700
    days: [ Saturday ]
    initial_version: true
- name: daily
  type: time
  source:
    interval: 24h
